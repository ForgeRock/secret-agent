name: Release
on:
  push:
    tags: [ "*" ]

jobs:
  build:
    name: Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3.5.2
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4.0.1
      with:
        go-version: ^1.16
      id: go

    - name: Setup Kustomize
      uses: imranismail/setup-kustomize@v2.0.0
      with:
        kustomize-version: "3.9.3"
    - name: Set Go Releaser Environment
      run: |
        echo "GIT_DIRTY="$(test -n "`git status --porcelain`" && echo "+CHANGES" || true) >> $GITHUB_ENV
        echo "BUILD_DATE="$(date '+%Y-%m-%d-%H:%M:%S') >> $GITHUB_ENV
        echo "TAG_NAME="$(git describe --tags --abbrev=0) >> $GITHUB_ENV

    - name: Kustomize Build
      run: |
        cd config/manager
        kustomize edit set image controller=${{ vars.CONTAINER_REGISTRY }}:${TAG_NAME}
        cd ../../
        kustomize build config/default > secret-agent.yaml
        git checkout -- config/manager/kustomization.yaml
    
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0.6.0'
      with:
        credentials_json: '${{ secrets.ARTIFACT_REGISTRY_KEY }}'
        token_format: 'access_token'

    - uses: 'docker/login-action@v1'
      name: 'Docker login'
      with:
        registry: '${{ vars.CONTAINER_REGISTRY }}'
        username: 'oauth2accesstoken'
        password: '${{ steps.auth.outputs.access_token }}'

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4.4.0
      with:
        images: ${{ vars.CONTAINER_REGISTRY }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Create Release
      uses: goreleaser/goreleaser-action@v4.2.0
      with:
        version: latest
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GIT_COMMIT: ${{ github.sha }}
        IMAGE_NAME: ${{ vars.CONTAINER_REGISTRY }}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3.1.2
      with:
        name: artifacts
        path: dist/*.tar.gz

    - name: Register pkg with pkg.go.dev
      run: |
        curl https://proxy.golang.org/github.com/forgerock/secret-agent/@v/${TAG_NAME}.info
